// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Changes in App 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ecf4f4",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View>
    <RCTScrollView
      contentContainerStyle={
        Object {
          "paddingBottom": 50,
        }
      }
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "height": "100%",
          "marginTop": 66.7,
        }
      }
    >
      <View>
        <Text
          style={
            Object {
              "fontSize": 25,
              "fontWeight": "bold",
              "marginBottom": 26.68,
              "marginTop": 66.7,
              "textAlign": "center",
            }
          }
          testID="titleText"
        >
          -Indra ABM Models-
        </Text>
        <View
          onLayout={[Function]}
          style={
            Object {
              "marginHorizontal": 52.50000000000001,
              "width": 600,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 6,
                "left": 4,
                "right": 4,
                "top": 6,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="dropdownBox"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "rgb(231, 231, 231)",
                    "borderTopLeftRadius": 4,
                    "borderTopRightRadius": 4,
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "marginBottom": 16,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.26)",
                    "bottom": 0,
                    "height": 2,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "transform": Array [
                      Object {
                        "scaleY": 0.5,
                      },
                    ],
                  }
                }
              />
              <View
                style={
                  Object {
                    "minHeight": 64,
                    "paddingBottom": 0,
                    "paddingTop": 0,
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                      ],
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    onLayout={[Function]}
                    style={
                      Object {
                        "color": "#6200ee",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": undefined,
                        "left": 0,
                        "opacity": 0,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "position": "absolute",
                        "textAlign": "left",
                        "top": 34,
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "scale": 1,
                          },
                        ],
                        "writingDirection": "ltr",
                      }
                    }
                  >
                    Choose a model:
                  </Text>
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": undefined,
                        "left": 0,
                        "opacity": 0,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "position": "absolute",
                        "textAlign": "left",
                        "top": 34,
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "scale": 1,
                          },
                        ],
                        "writingDirection": "ltr",
                      }
                    }
                  >
                    Choose a model:
                  </Text>
                </View>
                <TextInput
                  absoluteRTLLayout={false}
                  allowFontScaling={true}
                  animationDuration={225}
                  baseColor="rgba(0, 0, 0, .38)"
                  data={Array []}
                  dropdownMargins={
                    Object {
                      "max": 16,
                      "min": 8,
                    }
                  }
                  dropdownOffset={
                    Object {
                      "left": -7.5,
                      "top": 186.76000000000002,
                    }
                  }
                  dropdownPosition={1}
                  editable={false}
                  fontSize={16}
                  itemColor="rgba(0, 0, 0, .54)"
                  itemCount={1}
                  itemPadding={8}
                  labelExtractor={[Function]}
                  multiline={false}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  placeholderTextColor="rgba(0, 0, 0, 0.54)"
                  propsExtractor={[Function]}
                  rejectResponderTermination={true}
                  renderAccessory={[Function]}
                  rippleDuration={400}
                  selectionColor="#6200ee"
                  shadeOpacity={0.12}
                  style={
                    Array [
                      Object {
                        "flexGrow": 1,
                        "margin": 0,
                        "textAlign": "left",
                        "zIndex": 1,
                      },
                      Object {
                        "paddingLeft": 12,
                        "paddingRight": 12,
                      },
                      Object {
                        "height": 64,
                      },
                      Object {
                        "paddingBottom": 4,
                        "paddingTop": 24,
                      },
                      Object {
                        "color": "#000000",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": undefined,
                        "textAlignVertical": "center",
                      },
                      Array [
                        Object {},
                      ],
                    ]
                  }
                  textColor="rgba(0, 0, 0, .87)"
                  underlineColorAndroid="transparent"
                  useNativeDriver={false}
                  valueExtractor={[Function]}
                />
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onRippleAnimation={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
              rippleCentered={false}
              rippleColor="rgba(0, 0, 0, .38)"
              rippleDuration={400}
              rippleFades={true}
              rippleOpacity={0.54}
              rippleSequential={true}
              rippleSize={0}
              style={
                Object {
                  "height": 48,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 16,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "portrait-upside-down",
                "landscape",
                "landscape-left",
                "landscape-right",
              ]
            }
            transparent={true}
            visible={false}
          >
            <View
              onResponderRelease={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255, 255, 255, 1.0)",
                      "borderRadius": 2,
                      "position": "absolute",
                      "shadowColor": "rgba(0, 0, 0, 1.0)",
                      "shadowOffset": Object {
                        "height": 2,
                        "width": 0,
                      },
                      "shadowOpacity": 0.54,
                      "shadowRadius": 2,
                    },
                    Object {
                      "height": 16,
                      "left": undefined,
                      "top": undefined,
                      "transform": Array [
                        Object {
                          "translateY": -48,
                        },
                      ],
                      "width": undefined,
                    },
                    undefined,
                  ]
                }
              >
                <RCTScrollView
                  contentContainerStyle={
                    Object {
                      "paddingVertical": 8,
                    }
                  }
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEnabled={false}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "borderRadius": 2,
                      "flex": 1,
                    }
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
          </Modal>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                  "writingDirection": "ltr",
                },
                Array [
                  Object {
                    "fontSize": 14,
                    "letterSpacing": 0.25,
                    "lineHeight": 20,
                    "marginVertical": 2,
                  },
                  Object {
                    "height": 133.4,
                    "padding": 10,
                    "paddingHorizontal": 52.50000000000001,
                  },
                ],
              ],
            ]
          }
        >
          Choose a model to show description.
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f6fafe",
              "borderRadius": 0,
              "height": 80.03999999999999,
              "justifyContent": "center",
              "marginHorizontal": 75,
              "marginTop": 9,
              "opacity": 1,
              "padding": 10,
              "width": 600,
            }
          }
          testID="confirmButton"
        >
          <Text>
            Use this model
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`Changes in Menu 1`] = `
<View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingBottom": 50,
      }
    }
    showsVerticalScrollIndicator={false}
    style={
      Object {
        "height": "100%",
        "marginTop": 66.7,
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "fontSize": 25,
            "fontWeight": "bold",
            "marginBottom": 26.68,
            "marginTop": 66.7,
            "textAlign": "center",
          }
        }
        testID="titleText"
      >
        -Indra ABM Models-
      </Text>
      <View
        onLayout={[Function]}
        style={
          Object {
            "marginHorizontal": 52.50000000000001,
            "width": 600,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 6,
              "left": 4,
              "right": 4,
              "top": 6,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          testID="dropdownBox"
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "rgb(231, 231, 231)",
                  "borderTopLeftRadius": 4,
                  "borderTopRightRadius": 4,
                },
                Object {
                  "backgroundColor": "transparent",
                  "marginBottom": 16,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgba(0, 0, 0, 0.26)",
                  "bottom": 0,
                  "height": 2,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "transform": Array [
                    Object {
                      "scaleY": 0.5,
                    },
                  ],
                }
              }
            />
            <View
              style={
                Object {
                  "minHeight": 64,
                  "paddingBottom": 0,
                  "paddingTop": 0,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "#6200ee",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "left": 0,
                      "opacity": 0,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "position": "absolute",
                      "textAlign": "left",
                      "top": 34,
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                        Object {
                          "translateY": 0,
                        },
                        Object {
                          "scale": 1,
                        },
                      ],
                      "writingDirection": "ltr",
                    }
                  }
                >
                  Choose a model:
                </Text>
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "left": 0,
                      "opacity": 0,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "position": "absolute",
                      "textAlign": "left",
                      "top": 34,
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                        Object {
                          "translateY": 0,
                        },
                        Object {
                          "scale": 1,
                        },
                      ],
                      "writingDirection": "ltr",
                    }
                  }
                >
                  Choose a model:
                </Text>
              </View>
              <TextInput
                absoluteRTLLayout={false}
                allowFontScaling={true}
                animationDuration={225}
                baseColor="rgba(0, 0, 0, .38)"
                data={Array []}
                dropdownMargins={
                  Object {
                    "max": 16,
                    "min": 8,
                  }
                }
                dropdownOffset={
                  Object {
                    "left": -7.5,
                    "top": 186.76000000000002,
                  }
                }
                dropdownPosition={1}
                editable={false}
                fontSize={16}
                itemColor="rgba(0, 0, 0, .54)"
                itemCount={1}
                itemPadding={8}
                labelExtractor={[Function]}
                multiline={false}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder=""
                placeholderTextColor="rgba(0, 0, 0, 0.54)"
                propsExtractor={[Function]}
                rejectResponderTermination={true}
                renderAccessory={[Function]}
                rippleDuration={400}
                selectionColor="#6200ee"
                shadeOpacity={0.12}
                style={
                  Array [
                    Object {
                      "flexGrow": 1,
                      "margin": 0,
                      "textAlign": "left",
                      "zIndex": 1,
                    },
                    Object {
                      "paddingLeft": 12,
                      "paddingRight": 12,
                    },
                    Object {
                      "height": 64,
                    },
                    Object {
                      "paddingBottom": 4,
                      "paddingTop": 24,
                    },
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {},
                    ],
                  ]
                }
                textColor="rgba(0, 0, 0, .87)"
                underlineColorAndroid="transparent"
                useNativeDriver={false}
                valueExtractor={[Function]}
              />
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onRippleAnimation={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            rippleCentered={false}
            rippleColor="rgba(0, 0, 0, .38)"
            rippleDuration={400}
            rippleFades={true}
            rippleOpacity={0.54}
            rippleSequential={true}
            rippleSize={0}
            style={
              Object {
                "height": 48,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 16,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(255, 255, 255, 1.0)",
                    "borderRadius": 2,
                    "position": "absolute",
                    "shadowColor": "rgba(0, 0, 0, 1.0)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.54,
                    "shadowRadius": 2,
                  },
                  Object {
                    "height": 16,
                    "left": undefined,
                    "top": undefined,
                    "transform": Array [
                      Object {
                        "translateY": -48,
                      },
                    ],
                    "width": undefined,
                  },
                  undefined,
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "paddingVertical": 8,
                  }
                }
                data={Array []}
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEnabled={false}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "borderRadius": 2,
                    "flex": 1,
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View />
              </RCTScrollView>
            </View>
          </View>
        </Modal>
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            Array [
              Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "fontSize": 14,
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                  "marginVertical": 2,
                },
                Object {
                  "height": 133.4,
                  "padding": 10,
                  "paddingHorizontal": 52.50000000000001,
                },
              ],
            ],
          ]
        }
      >
        Choose a model to show description.
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f6fafe",
            "borderRadius": 0,
            "height": 80.03999999999999,
            "justifyContent": "center",
            "marginHorizontal": 75,
            "marginTop": 9,
            "opacity": 1,
            "padding": 10,
            "width": 600,
          }
        }
        testID="confirmButton"
      >
        <Text>
          Use this model
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
